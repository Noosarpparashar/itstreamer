--------------------------------------------------------------------------deploymentJenkins-yaml------------------------------------------------------

apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
        -
          image: "jenkins/jenkins:2.190.2-jdk11"
          name: jenkins
          ports:
            -
              containerPort: 8080
          volumeMounts:
            -
              mountPath: /var/jenkins_home
              name: jenkins
      securityContext:
        fsGroup: 2000
      volumes:
        -
          name: jenkins
          persistentVolumeClaim:
            claimName: jenkins-pv-claim
            
            
-------------------------------------------------------------------persistence Volume yaml file --------------------------------------------------------------------------------

apiVersion: v1
kind: PersistentVolume
metadata:
  name: jenkins-pv-volume
  labels:
    type: amazonEBS
spec:
  capacity:
    storage: 100Gi
  accessModes:
    - ReadWriteOnce
  awsElasticBlockStore:
    volumeID: vol-057ffe687bd0b36da
    fsType: ext4
    
------------------------------------------------------------------------------persistence VOlume claim yaml file-------------------------------------------------------------------------

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pv-claim
  labels:
    type: amazonEBS
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 80Gi
      
      --------------------------------------------------------------------service yaml-----------------------------------------------------------------------------------
ubuntu@ip-172-31-13-61:~/jenkins_Deployment$ cat service-jenkins.yaml
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  labels:
    app: jenkins
spec:
  type: NodePort
  ports:
    - name: ui
      port: 8080
      targetPort: 8080
      protocol: TCP
    - name: slave
      port: 50000
      protocol: TCP
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: jenkins
    
--------------------------------------------------------------ingress---jenkins-------------------------------------------------------------------------------------------------------
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: simple-ingress
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: instance
spec:
  rules:
    - host: foo.noosarp.click
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jenkins
                port:
                  number: 80    
--------------------------------------------------------service accouns yaml---------------------------------------------------------------------------------------------------------------

ubuntu@ip-172-31-13-61:~/jenkins_Deployment$ cat sa-jenkins.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: jenkins
rules:
- apiGroups:
  - '*'
  resources:
  - statefulsets
  - services
  - replicationcontrollers
  - replicasets
  - podtemplates
  - podsecuritypolicies
  - pods
  - pods/log
  - pods/exec
  - podpreset
  - poddisruptionbudget
  - persistentvolumes
  - persistentvolumeclaims
  - jobs
  - endpoints
  - deployments
  - deployments/scale
  - daemonsets
  - cronjobs
  - configmaps
  - namespaces
  - events
  - secrets
  verbs:
  - create
  - get
  - watch
  - delete
  - list
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: jenkins
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jenkins
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:serviceaccounts:jenkins    
 
 
 
 
 
 Video followed ------>
 For cluster set up
 https://www.youtube.com/watch?v=cB0fCMPIj1Y&list=PLudFIcRiWNWQFy7EGw3kW_9n9woamu8r7&index=3&t=1645s
 
 For sewrvices and alb 
https://www.youtube.com/watch?v=S8U7A-eGdOs 

Alb urls followed
https://docs.aws.amazon.com/eks/latest/userguide/aws-load-balancer-controller.html
https://docs.aws.amazon.com/eks/latest/userguide/alb-ingress.html


Purchased domain noosarp.click


